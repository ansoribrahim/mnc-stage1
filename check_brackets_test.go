package main

import (
	"testing"
)

func TestCheckBrackets(t *testing.T) {
	testCases := []struct {
		input    string
		expected bool
	}{
		{"{{[<>[{{}}]]}}", false},
		{"{<{[[{{[]<{{[{[]<>}]}}<>>}}]]}>}", false},
		{"{{[{<[[{<{<<<[{{{[]{<{[<[[<{{[[[[[<{[{<[<<[[<<{[[{[<<<<<[{[{[{{<{[[<{<<<{<{[<>]}>}>>[]>}>]]}>}}]}]}]>>>>>>]}]]}>>]]>>]>}]}>]]]]]}}>]]>]}>}}}}]>>>}>}]]>}]}}", false},
		{"[<{<{[{[{}[[<[<{{[<[<[[[<{{[<<<[[[<[<{{[<<{{<{<{<[<{[{{[{{{{[<<{{{<{[{[[[{<<<[{[<{<<<>>>}>]}]>>>}]]]}]}>}}}>>]}}}}]}}]}>]>}>}>}}>>]}}>]>]]]>>>]}}>]]]>]>]}}>]>]]}]}>}>]", false},
		{"[[{[[<{{{{[[[<[{[[<{{{{[{[{[[[<<{<{[{<<<[[<[{[<{{{[<[[<<[{<<[[[{<[{[[{{<<>[<<{{<<{[[[<{}{[{{{[[{{[[<[{}]>]]}}]]}}}]}>]]]}>>}}>>]>}}]]}]>}]]]>>}]>>]]>]}]}}>]}]>]]>>>}]}>}>>]]]}]}]}}}}>]]}]>]]]}}}}>]]}]]", false},
		{"]", false},
		{"[>", false},
		{"{<{[[{{[]<{[{[]<>}]}}<>>}}]]}>}", false},
		{"{{[{<[[{<{<<<[{{{[]{<{[<[[<{{[[[[<{[{<[<<[[<<{[[{[<<<<<[{[{[{{<{[[<{<<<{<{[<>]}>}>>[]>}>]]}", false},
		{">}}]}]}]>>>>>>]}]]}>>]]>>]>}]}>]]]]]}}>]]>]}>}}}}]>>>}>}]]>}]}}", false},
		{"[<{<{[{[{}[[<[<{{[<[<[[[<{{[<<<[[[<[<{{[<<{{<{<{<[<{[{{[{{{{[<<{{{<{[{[[[{<<<[{[<{<<>>[]}]>>>}]]]}]}>}}}>>]}}}}]}}]}>]>}>}>}}>>]}}>]>]]]>>>]}}>]]]>]>]}}>]>]]}]}>}>]", false},
		{"[{}<[>]", false},
	}

	for _, testCase := range testCases {
		result := CheckBrackets(testCase.input)
		if result != testCase.expected {
			t.Errorf("FAILED: Input: %s, Expected: %v, Got: %v", testCase.input, testCase.expected, result)
		}
	}
}
